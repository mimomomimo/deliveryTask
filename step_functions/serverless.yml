service: DriverRequest

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters

provider:
  name: aws
  role: StepFunctionRole
  runtime: python3.8
  region: us-west-2
  stage: ${opt:stage, 'Staging'}

# warn when serverless.yml is config error
configValidationMode: warn

package:
  exclude:
    - node_modules/**

custom:
  AWS_DEFAULT_REGION: us-west-2
  TZ: UTC

functions:
  driverSally:
    name: ${self:service}-SallyLambda
    handler: sally.lambda_handler
    timeout: 60
    role: LambdaRole
    events:
      - sns: arn:aws:sns:us-west-2:781667190002:DeliveryRequest
  driverAlex:
    name: ${self:service}-AlexLambdaa
    handler: alex.lambda_handler
    timeout: 60
    role: LambdaRole
    events:
      - arn:
        Fn::GetAtt:
          - DeliveryRequest
          - Arn

stepFunctions:
  stateMachines:
    StateMachine1:
      name: ${self:service}
      definition:
        StartAt: check_inventory
        States:
          check_inventory:
            Type: Pass
            OutputPath: "$"
            Next: place_cc_hold
          place_cc_hold:         
            Type: Pass
            OutputPath: "$"
            Next: request_driver
          request_driver:
            Type: Task
            Resource: arn:aws:states:::sns:publish.waitForTaskToken
            TimeoutSeconds: 15
            Parameters: 
              Message:
                TaskToken.$: "$$.Task.Token"
                Input.$: "$.OrderNumber"
              TopicArn: arn:aws:sns:us-west-2:781667190002:DeliveryRequest
            Catch:
              - ErrorEquals: ["States.Timeout" ]
                Next: notify_customer_of_delay
            Next: delivery_assigned_to_driver
          delivery_assigned_to_driver:
            Type: Pass
            OutputPath: $
            End: true
          notify_customer_of_delay:
            Type: Pass
            OutputPath: $
            End: true

resources:
  Resources:
     LambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:provider.stage}-SophiaAIDWHGetAPITokenLambda
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Description: Allows Lambda functions to call AWS services on your behalf.
        Policies:
          - PolicyName: ${self:provider.stage}-SophiaAIDWHGetAPITokenLambdaPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - sqs:*
                    - ssm:*
                  Resource:
                    - "*"
    StepFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}StepFunctionsRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
          - arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
                  - events.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${self:service}StepFunctionsPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - lambda:*
                    - sns:Publish
                  Resource:
                    - "*"
    DeliveryRequest:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: DeliveryRequest
        TopicName: DeliveryRequest
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
          Endpoint: tugoyuze@usako.net
          Protocol: email
          TopicArn: !Ref DeliveryRequest
